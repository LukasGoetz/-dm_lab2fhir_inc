version: '2.1'
services:

### MySQL ###############################################

  mysql:
    image: mysql:5.7
    container_name: gpas-1.9.1-mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./gpas/sqls:/docker-entrypoint-initdb.d
    labels:
      - "service-name:gpas"
      - "service-type:db-srv"
      - "environment:test"
    networks:
      - ci_pipeline
      
### WildFly #############################################
  wildfly:
    image: mosaicgreifswald/wildfly:18.0.1.Final-20191213
    container_name: gpas
    links:
      - "mysql:mysqldb"
    ports:
      - "8080:8080"
      - "9990:9990"
    environment:
      WILDFLY_PASS: wildfly_password
      JAVA_OPTS: >-
        -server
        -Xms1G
        -Xmx6G
        -XX:MetaspaceSize=256M
        -XX:MaxMetaspaceSize=1G
        -XX:StringTableSize=1000003
        -Djava.net.preferIPv4Stack=true
        -Djava.awt.headless=true
        -Djboss.modules.system.pkgs=org.jboss.byteman
    depends_on:
      - mysql
    volumes:
      - ./gpas/jboss:/entrypoint-jboss-batch
      - ./gpas/deployments:/entrypoint-deployments
    labels:
      - "service-name:gpas"
      - "service-type:app-srv"
      - "environment:test"
    entrypoint: /bin/bash
    command: -c "./wait-for-it.sh mysql:3306 -t 120 && ./run.sh"
    networks:
      - ci_pipeline    

  gpas_init_patient:
    image: curlimages/curl:7.72.0
    volumes:
      - ./gpas:/wrk
    command: ["-X POST", "-H 'Content-Type:application/xml'",
              "-d@/wrk/patient_id", "http://wildfly:8080/gpas/DomainService"]
    depends_on:
      wildfly:
          condition: service_healthy
    networks:
      - ci_pipeline

  gpas_init_encounter:
    image: curlimages/curl:7.72.0
    volumes:
      - ./gpas:/wrk
    command: ["-X POST", "-H 'Content-Type:application/xml'",
              "-d@/wrk/encounter_id", "http://wildfly:8080/gpas/DomainService"]
    depends_on:
      wildfly:
          condition: service_healthy
    networks:
      - ci_pipeline

  #test postgres database
  test_db:
    container_name: test_db
    image: postgres:13.1
    restart: always
    environment:
      POSTGRES_PASSWORD: unittest1234
    volumes:
      - ./test_db/test_data:/srv/test_data
      - ./test_db/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    networks:
      - ci_pipeline

  #loinc converter
  loinc_converter:
    container_name: loinc_converter
    image: docker.miracum.org/miracum-etl/loinc-conversion:1.9.5
    networks:
      - ci_pipeline

networks:
  ci_pipeline:
    name: ci_pipeline